<?xml version="1.0"?>
<project name="AdvertiserSDK" default="main" basedir=".">
<record name="logfile.txt" loglevel="verbose" action="start" append="false" />

  <!-- Sets variables which can later be used. -->
  <!-- The value of a property is accessed via ${} -->

<property name="lib.dir"     location="lib"/>
  <property name="src.dir" location="src" />
  <property name="build.dir" location="bin" />
  <property name="gen.dir" location="gen" />
  

    <path id="build.classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <!-- Deletes the existing build, docs and gen directory-->
  <target name="clean">
    <delete dir="${build.dir}" />
    <delete dir="${gen.dir}" />
  </target>

  <!-- Creates the  build, docs and gen directory-->
  <target name="makedir">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${gen.dir}" />
  </target>

  <!-- Compiles the java code (including the usage of library for JUnit -->
  <target name="compile" depends="config">
    <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath">
    </javac>

  </target>

  <!-- Creates Javadoc -->
  <target name="docs" depends="compile">
    <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
      <!-- Define which files / directory should get included, we include all -->
       <fileset dir="${src.dir}">
                <include name="**" />
           </fileset>
    </javadoc>
  </target>

  <!--Creates the deployable jar file  -->
  <target name="jar" depends="compile">
    <jar destfile="${gen.dir}\ZanoxSDK.jar" basedir="${build.dir}">

    </jar>
  </target>



  <target name="main" depends="compile, jar">
    <description>Main target</description>
  </target>

   <!-- Below are our custom targets. -->
    
    <!-- Copy Config.java to our source tree, replacing custom tokens with
         values in build.properties. The configuration depends on "clean"
         because otherwise the build system will not detect changes in the 
         configuration. -->
	<target name="config" depends="clean,makedir">

		<property name="config-target-path" value="${source.dir}/com/zanox/advsdk/test"/>

		<!-- Copy the configuration file, replacing tokens in the file. -->
		<copy file="config/Config.java" todir="${config-target-path}" 
		      overwrite="true" encoding="utf-8">
			<filterset>
				<filter token="CONFIG.SDK_TYPE" value="${config.sdk_Type}"/>
			</filterset>
		</copy>
		
		<!-- Now set it to read-only, as we don't want people accidentally 
		     editing the wrong one. NOTE: This step is unnecessary, but I do
		     it so the developers remember that this is not the original file. -->
		<chmod file="${config-target-path}/Config.java" perm="-w"/>
		<attrib file="${config-target-path}/Config.java" readonly="true"/>

		<record name="logfile.txt" action="stop"/>

	</target>

</project>